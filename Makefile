# jgfs
# (c) 2013 Justin Gottula
# The source code of this project is distributed under the terms of the
# simplified BSD license. See the LICENSE file for details.

vpath %.ggo $(wildcard src/*)

CC:=gcc
CFLAGS:=-std=gnu11 -O2 -g -Wall -Wextra -flto
LDFLAGS:=
LIBS:=

FUSE_BIN:=bin/jgfs
MKFS_BIN:=bin/mkjgfs
FSCK_BIN:=bin/jgfsck

# resolved when referenced
OBJS=$(patsubst %.c,%.o,$(wildcard src/*/*.c))


.PHONY: all clean fuse mkfs fsck

# default rule
all: fuse mkfs fsck

fuse: $(FUSE_BIN)
mkfs: $(MKFS_BIN)
fsck: $(FSCK_BIN)

clean:
	rm -rf $(wildcard bin/*) $(wildcard src/*/*.o) $(wildcard src/*/*.dep) $(wildcard src/*/cmdline.c) $(wildcard src/*/cmdline.h)


$(FUSE_BIN): $(filter src/fuse/%.o,$(OBJS))
	$(CC) $(CFLAGS) $(LIBS) -o $@ $(filter %.o,$^)
$(MKFS_BIN): $(filter src/mkfs/%.o,$(OBJS)) src/mkfs/cmdline.{c,h}
	$(CC) $(CFLAGS) $(LIBS) -o $@ $(filter %.o,$^)
$(FSCK_BIN): $(filter src/fsck/%.o,$(OBJS)) src/fsck/cmdline.{c,h}
	$(CC) $(CFLAGS) $(LIBS) -o $@ $(filter %.o,$^)


%.o: %.c Makefile
	$(CC) $(CFLAGS) -o $@ -Isrc -MP -MMD -MF $(<D)/$(patsubst %.c,%.dep,$(<F)) -c $<

# getopt generation
src/%/cmdline.{c,h}: %.ggo
	gengetopt -i $< --output-dir=$(@D)


# concatenate gcc's autogenerated dependencies
-include src/*/*.dep


# TODO: verify that gengetopt gets called again when the ggo file is touched
